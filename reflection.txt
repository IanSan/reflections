How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    We can see which part was changed that may have caused the bug.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    We don't have to look at each individual line to see any changes.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    We only want the snapshots of time rather than every changes. Also, saving a version
	for every changes will require a lot of memory space.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because we can create different branches from a single source.

How can you use the commands git log and git diff to view the history of files?

    we can use it to see the changes in the files, such as date, codes, etc.

How might using version control make you more confident to make changes that
could break something?

    We can always go back to the previous state if something doesn't work.

Now that you have your workspace set up, what do you want to try using Git for?

    I want it to control the working version vs my testing version of my project.